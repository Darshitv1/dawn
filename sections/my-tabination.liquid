{% comment %} 
                This is a simple tabination section that allows you to create up to 3 tabs. 
{% endcomment %}
<style>
  .tabination {
    display: flex;
    flex-direction: column;
    width: 100%;
  }

  .tabination__tabs {
    display: flex;
    justify-content: space-around;
    /* margin-bottom: 20px; */
  }

  .tabination__tab {
    cursor: pointer;
    padding: 10px 20px;
    /* border: 1px solid #ccc; */
    background-color: #fff;
  }

  .tabination__tab--active {
    background-color: #ffead1bd;
    border-bottom: none;
    border-radius: 50% 50% 0 0;
    transition: background-color 0.3s ease-in-out;
  }

  .tabination__content {
    display: flex;
    flex: 1;
    height: auto;
    width: 100%;
  }

  .tabination__content__tab {
    width: 100%;
    padding: 20px;
    background-color: #fff;
    /* border: 1px solid #ccc; */
    /* transform: translateX(-100%); */
    display: none;
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
    box-sizing: border-box;
  }

  .tabination__content__tab--active {
    background-color: #ffead1bd;
    /* transform: translateX(0); */
    display: block;
    opacity: 1;
    transition: opacity 0.5s ease-in-out;
  }
</style>
<div class="tabination">
  <div class="tabination__tabs">
    {% for tab in section.blocks %}
      <div class="tabination__tab{% if forloop.index == 1 %} tabination__tab--active{% endif %}" data-tab="{{ forloop.index }}">
        {{ tab.settings.tab_title }}
      </div>
    {% endfor %}
  </div>
  <div class="tabination__content">
    {% for tab in section.blocks %}
      <div class="tabination__content__tab{% if forloop.index == 1 %} tabination__content__tab--active{% endif %}" data-tab="{{ forloop.index }}">
        {{ tab.settings.tab_content }}
      </div>
    {% endfor %}
  </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
    const tabs = document.querySelectorAll('.tabination__tab');
    const tabContents = document.querySelectorAll('.tabination__content__tab');
  
    tabs.forEach(tab => {
        tab.addEventListener('click', function() {
            const tabNumber = this.getAttribute('data-tab');
  
            tabs.forEach(tab => {
                tab.classList.remove('tabination__tab--active');
            });
  
            tabContents.forEach(tabContent => {
                tabContent.classList.remove('tabination__content__tab--active');
            });
  
            this.classList.add('tabination__tab--active');
            const currentTabContent = document.querySelector(`.tabination__content__tab[data-tab="${tabNumber}"]`);
            currentTabContent.classList.add('tabination__content__tab--active');
        });
    });
  });
</script>

{% schema %}
  {
    "name": "My Tabination",
    "settings": [],
    "blocks": [
      {
        "name": "Tabs",
        "type": "tabination",
        "limit": 3,
        "settings": [
          {
            "type": "text",
            "id": "tab_title",
            "label": "Tab Title",
            "default": "Tab"
          },
          {
            "type": "richtext",
            "id": "tab_content",
            "label": "Tab Content",
            "default": "<p>Tab content</p>"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "My Tabination",
        "category": "Tabs"
      }
    ]
  }
{% endschema %}